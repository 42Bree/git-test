[{"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\reportWebVitals.js":"1","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\index.js":"2","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\App.js":"3","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\MenuComponent.js":"4","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\shared\\dishes.js":"5","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\DishdetailComponent.js":"6","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\MainComponent.js":"7","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\FooterComponent.js":"8","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\HeaderComponent.js":"9","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\ContactComponent.js":"10","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\HomeComponent.js":"11","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\shared\\promotions.js":"12","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\AboutComponent.js":"13","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\redux\\configureStore.js":"14","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\redux\\promotions.js":"15"},{"size":362,"mtime":1606115021318,"results":"16","hashOfConfig":"17"},{"size":638,"mtime":1606462252408,"results":"18","hashOfConfig":"17"},{"size":539,"mtime":1606894716935,"results":"19","hashOfConfig":"17"},{"size":1378,"mtime":1606813029792,"results":"20","hashOfConfig":"17"},{"size":1490,"mtime":1606805502223,"results":"21","hashOfConfig":"17"},{"size":6911,"mtime":1606958996010,"results":"22","hashOfConfig":"17"},{"size":2039,"mtime":1606895125948,"results":"23","hashOfConfig":"17"},{"size":2639,"mtime":1606464124235,"results":"24","hashOfConfig":"17"},{"size":5044,"mtime":1606885503164,"results":"25","hashOfConfig":"17"},{"size":10931,"mtime":1606897918770,"results":"26","hashOfConfig":"17"},{"size":1112,"mtime":1606806616191,"results":"27","hashOfConfig":"17"},{"size":445,"mtime":1606805543047,"results":"28","hashOfConfig":"17"},{"size":4546,"mtime":1606871009057,"results":"29","hashOfConfig":"17"},{"size":482,"mtime":1606963095844,"results":"30","hashOfConfig":"17"},{"size":195,"mtime":1606962677209,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"187zfzo",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\index.js",[],["66","67"],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\App.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\shared\\dishes.js",[],["68","69"],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\DishdetailComponent.js",["70","71","72","73","74","75"],"import React, {Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem,Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label, Button, Row, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || val.length <= len;\r\nconst minLength = len => val => val && val.length >= len;\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        }; \r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\" />Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                                <Col md={10}>\r\n                                <Control.select model=\".rating\" id=\".rating\" name=\".rating\" className=\"form-control\">\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </Control.select>\r\n                                    </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={2}>Your Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Comments</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderDish({dish}) {\r\n\r\n    if (dish != null)\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <Card>\r\n                    <CardImg top src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                      <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    else\r\n        return(\r\n            <div></div>\r\n        );\r\n}\r\nfunction RenderComments({comments}) {\r\n\r\n    if (comments == null)\r\n        return(\r\n            <div></div>\r\n        )\r\n\r\n    const dishComment = comments.map((comment) => {\r\n        return (\r\n            <li key={comment.id} className=\"m-1\">\r\n                <p>{comment.comment}</p>\r\n                <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n            </li>\r\n        )\r\n    });\r\n    return(\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <h4>Comments</h4>\r\n            <ul className=\"list-unstyled\">\r\n                {dishComment}\r\n            </ul>\r\n            <CommentForm></CommentForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.dish!=null)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments} />\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            );\r\n    else\r\n       return (\r\n            <div></div>\r\n        );\r\n}\r\n\r\nexport default DishDetail;","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\MainComponent.js",["76"],"import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport About from './AboutComponent';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return(\r\n          <Home dish={this.props.dishes.filter((dish) => dish.featured)[0]}\r\n          promotion={this.props.promotions.filter((promo) => promo.featured)[0]}\r\n          leader={this.props.leaders.filter((leader) => leader.featured)[0]}/>\r\n      );\r\n    }\r\n    const AboutUs = () => {\r\n      return(\r\n        <About leaders={this.props.leaders}/>\r\n      );\r\n    }\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n            comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} />\r\n      );\r\n    };\r\n    return (\r\n      <div>\r\n        <Header />\r\n\r\n        <Switch>\r\n              <Route path='/home' component={HomePage} />\r\n              <Route path='/aboutus' component={AboutUs} />\r\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n              <Route exact path='/contactus' component={Contact} />\r\n              <Redirect to=\"/home\" />\r\n          </Switch>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Main));\r\n","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\ContactComponent.js",["77","78","79","80","81","82","83","84"],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\redux\\configureStore.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\redux\\promotions.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"85","replacedBy":"89"},{"ruleId":"87","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":2,"column":114,"nodeType":"93","messageId":"94","endLine":2,"endColumn":118},{"ruleId":"91","severity":1,"message":"95","line":2,"column":120,"nodeType":"93","messageId":"94","endLine":2,"endColumn":129},{"ruleId":"91","severity":1,"message":"96","line":2,"column":131,"nodeType":"93","messageId":"94","endLine":2,"endColumn":136},{"ruleId":"97","severity":1,"message":"98","line":40,"column":33,"nodeType":"99","endLine":40,"endColumn":118},{"ruleId":"97","severity":1,"message":"100","line":52,"column":37,"nodeType":"99","endLine":57,"endColumn":44},{"ruleId":"97","severity":1,"message":"101","line":73,"column":37,"nodeType":"99","endLine":75,"endColumn":68},{"ruleId":"102","severity":1,"message":"103","line":24,"column":3,"nodeType":"104","messageId":"105","endLine":27,"endColumn":4},{"ruleId":"106","severity":1,"message":"107","line":60,"column":29,"nodeType":"99","endLine":60,"endColumn":71},{"ruleId":"97","severity":1,"message":"100","line":74,"column":37,"nodeType":"99","endLine":80,"endColumn":44},{"ruleId":"97","severity":1,"message":"100","line":96,"column":37,"nodeType":"99","endLine":102,"endColumn":44},{"ruleId":"97","severity":1,"message":"100","line":118,"column":37,"nodeType":"99","endLine":124,"endColumn":44},{"ruleId":"97","severity":1,"message":"100","line":141,"column":37,"nodeType":"99","endLine":147,"endColumn":44},{"ruleId":"97","severity":1,"message":"108","line":163,"column":45,"nodeType":"99","endLine":165,"endColumn":52},{"ruleId":"97","severity":1,"message":"98","line":171,"column":37,"nodeType":"99","endLine":172,"endColumn":66},{"ruleId":"97","severity":1,"message":"101","line":181,"column":37,"nodeType":"99","endLine":183,"endColumn":68},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],["109"],["110"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'FormGroup' is defined but never used.","'Input' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]