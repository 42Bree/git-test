[{"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\reportWebVitals.js":"1","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\index.js":"2","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\App.js":"3","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\MenuComponent.js":"4","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\shared\\dishes.js":"5","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\DishdetailComponent.js":"6","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\MainComponent.js":"7","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\FooterComponent.js":"8","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\HeaderComponent.js":"9","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\ContactComponent.js":"10","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\HomeComponent.js":"11","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\shared\\promotions.js":"12","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\AboutComponent.js":"13","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\redux\\configureStore.js":"14","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\redux\\promotions.js":"15","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\redux\\ActionTypes.js":"16","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\redux\\comments.js":"17","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\redux\\ActionCreators.js":"18","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\redux\\dishes.js":"19","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\redux\\forms.js":"20"},{"size":362,"mtime":1606115021318,"results":"21","hashOfConfig":"22"},{"size":638,"mtime":1606462252408,"results":"23","hashOfConfig":"22"},{"size":539,"mtime":1606894716935,"results":"24","hashOfConfig":"22"},{"size":2062,"mtime":1606979868469,"results":"25","hashOfConfig":"22"},{"size":1490,"mtime":1606805502223,"results":"26","hashOfConfig":"22"},{"size":7439,"mtime":1606979721936,"results":"27","hashOfConfig":"22"},{"size":3224,"mtime":1606983968332,"results":"28","hashOfConfig":"22"},{"size":2639,"mtime":1606464124235,"results":"29","hashOfConfig":"22"},{"size":5044,"mtime":1606885503164,"results":"30","hashOfConfig":"22"},{"size":10947,"mtime":1606984115867,"results":"31","hashOfConfig":"22"},{"size":1475,"mtime":1606978684723,"results":"32","hashOfConfig":"22"},{"size":445,"mtime":1606805543047,"results":"33","hashOfConfig":"22"},{"size":4546,"mtime":1606871009057,"results":"34","hashOfConfig":"22"},{"size":957,"mtime":1606983774110,"results":"35","hashOfConfig":"22"},{"size":195,"mtime":1606962677209,"results":"36","hashOfConfig":"22"},{"size":178,"mtime":1606976397924,"results":"37","hashOfConfig":"22"},{"size":505,"mtime":1606972423247,"results":"38","hashOfConfig":"22"},{"size":1087,"mtime":1606976664161,"results":"39","hashOfConfig":"22"},{"size":773,"mtime":1606977004687,"results":"40","hashOfConfig":"22"},{"size":170,"mtime":1606983348796,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"187zfzo",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\index.js",[],["86","87"],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\App.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\shared\\dishes.js",[],["88","89"],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\DishdetailComponent.js",["90","91","92","93","94","95"],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\MainComponent.js",["96"],"import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addComment, fetchDishes } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addComment: (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())}, // <= is a punk I need to map it in the DispatchToProp so that dispatch dishes become available for the main component to make use of\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))} //form renamed as a feedback reset\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n  //get some help from Mount to fetch the dishes\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return(\r\n          <Home \r\n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]} // dishes.dishes cuz dishses is inside a dishes in dishes.js now\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishesErrMess={this.props.dishes.errMess}\r\n              promotion={this.props.promotions.filter((promo) => promo.featured)[0]}\r\n              leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n          />\r\n      );\r\n    }\r\n    const AboutUs = () => {\r\n      return(\r\n        <About leaders={this.props.leaders}/>\r\n      );\r\n    }\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            addComment={this.props.addComment}\r\n          />\r\n      );\r\n    };\r\n    return (\r\n      <div>\r\n        <Header />\r\n\r\n        <Switch>\r\n              <Route path='/home' component={HomePage} />\r\n              <Route path='/aboutus' component={AboutUs} />\r\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n              <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n              <Redirect to=\"/home\" />\r\n          </Switch>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main)); //make addcomponent and fetchdishes use in Main\r\n","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\ContactComponent.js",["97","98","99","100","101","102","103","104","105"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current State is: \" + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\" \r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n  \r\n  }\r\n\r\nexport default Contact;","C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\redux\\configureStore.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\redux\\promotions.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\redux\\ActionTypes.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\redux\\comments.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\redux\\ActionCreators.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\redux\\dishes.js",[],"C:\\Users\\42Maru\\Desktop\\Coursera\\React\\confusion\\src\\redux\\forms.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"106","replacedBy":"110"},{"ruleId":"108","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":2,"column":114,"nodeType":"114","messageId":"115","endLine":2,"endColumn":118},{"ruleId":"112","severity":1,"message":"116","line":2,"column":120,"nodeType":"114","messageId":"115","endLine":2,"endColumn":129},{"ruleId":"112","severity":1,"message":"117","line":2,"column":131,"nodeType":"114","messageId":"115","endLine":2,"endColumn":136},{"ruleId":"118","severity":1,"message":"119","line":43,"column":33,"nodeType":"120","endLine":43,"endColumn":118},{"ruleId":"118","severity":1,"message":"121","line":55,"column":37,"nodeType":"120","endLine":60,"endColumn":44},{"ruleId":"118","severity":1,"message":"122","line":76,"column":37,"nodeType":"120","endLine":78,"endColumn":68},{"ruleId":"123","severity":1,"message":"124","line":31,"column":3,"nodeType":"125","messageId":"126","endLine":34,"endColumn":4},{"ruleId":"112","severity":1,"message":"127","line":4,"column":33,"nodeType":"114","messageId":"115","endLine":4,"endColumn":40},{"ruleId":"128","severity":1,"message":"129","line":60,"column":29,"nodeType":"120","endLine":60,"endColumn":71},{"ruleId":"118","severity":1,"message":"121","line":74,"column":37,"nodeType":"120","endLine":80,"endColumn":44},{"ruleId":"118","severity":1,"message":"121","line":96,"column":37,"nodeType":"120","endLine":102,"endColumn":44},{"ruleId":"118","severity":1,"message":"121","line":118,"column":37,"nodeType":"120","endLine":124,"endColumn":44},{"ruleId":"118","severity":1,"message":"121","line":141,"column":37,"nodeType":"120","endLine":147,"endColumn":44},{"ruleId":"118","severity":1,"message":"130","line":163,"column":45,"nodeType":"120","endLine":165,"endColumn":52},{"ruleId":"118","severity":1,"message":"119","line":171,"column":37,"nodeType":"120","endLine":172,"endColumn":66},{"ruleId":"118","severity":1,"message":"122","line":181,"column":37,"nodeType":"120","endLine":183,"endColumn":68},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],["131"],["132"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'FormGroup' is defined but never used.","'Input' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]