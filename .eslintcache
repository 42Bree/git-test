[{"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\redux\\services.js":"1","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\components\\MainComponent.js":"2","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\redux\\ActionCreators.js":"3","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\components\\ServicedetailComponent.js":"4","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\index.js":"5","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\redux\\leaders.js":"6","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\redux\\forms.js":"7","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\redux\\comments.js":"8","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\components\\AboutComponent.js":"9","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\components\\HeaderComponent.js":"10","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\components\\HomeComponent.js":"11","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\components\\ContactComponent.js":"12","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\components\\ServiceComponent.js":"13","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\components\\FooterComponent.js":"14","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\redux\\ActionTypes.js":"15","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\shared\\leaders.js":"16","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\components\\LoadingComponent.js":"17","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\shared\\baseUrl.js":"18","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\shared\\dishes.js":"19","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\redux\\promotions.js":"20","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\redux\\configureStore.js":"21"},{"size":811,"mtime":1620540342807,"results":"22","hashOfConfig":"23"},{"size":4646,"mtime":1620541960034,"results":"24","hashOfConfig":"23"},{"size":5358,"mtime":1620540605706,"results":"25","hashOfConfig":"23"},{"size":7205,"mtime":1620541627946,"results":"26","hashOfConfig":"23"},{"size":657,"mtime":1620385996699,"results":"27","hashOfConfig":"23"},{"size":826,"mtime":1620385996716,"results":"28","hashOfConfig":"23"},{"size":170,"mtime":1620385996714,"results":"29","hashOfConfig":"23"},{"size":618,"mtime":1620385996707,"results":"30","hashOfConfig":"23"},{"size":3897,"mtime":1620538738183,"results":"31","hashOfConfig":"23"},{"size":4794,"mtime":1620542412760,"results":"32","hashOfConfig":"23"},{"size":2202,"mtime":1620385996689,"results":"33","hashOfConfig":"23"},{"size":9252,"mtime":1620539111561,"results":"34","hashOfConfig":"23"},{"size":1859,"mtime":1620541677001,"results":"35","hashOfConfig":"23"},{"size":2941,"mtime":1620538351015,"results":"36","hashOfConfig":"23"},{"size":718,"mtime":1620540117210,"results":"37","hashOfConfig":"23"},{"size":2382,"mtime":1620385996736,"results":"38","hashOfConfig":"23"},{"size":256,"mtime":1620385996691,"results":"39","hashOfConfig":"23"},{"size":58,"mtime":1620385996728,"results":"40","hashOfConfig":"23"},{"size":1490,"mtime":1620385996734,"results":"41","hashOfConfig":"23"},{"size":683,"mtime":1620385996719,"results":"42","hashOfConfig":"23"},{"size":918,"mtime":1620540323065,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s33xv5",{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\redux\\services.js",[],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\components\\MainComponent.js",["90","91"],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\redux\\ActionCreators.js",["92"],"import * as ActionTypes from \"./ActionTypes\";\r\nimport { DISHES } from \"../shared/dishes\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nexport const addComment = (comment) => ({\r\n  type: ActionTypes.ADD_COMMENT,\r\n  payload: comment,\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n  const newComment = {\r\n    dishId: dishId,\r\n    rating: rating,\r\n    author: author,\r\n    comment: comment,\r\n  };\r\n  newComment.date = new Date().toISOString();\r\n\r\n  return fetch(baseUrl + \"comments\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newComment), //added feature\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    credentials: \"same-origin\", //NodeJS\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => dispatch(addComment(response))) // push to redux store by doing dispatch here\r\n    .catch((error) => {\r\n      console.log(\"post comments\", error.message);\r\n      alert(\"Your comment could not be posted\\nError: \" + error.message);\r\n    });\r\n};\r\n\r\nexport const fetchServices = () => (dispatch) => {\r\n  dispatch(servicesLoading(true));\r\n  return fetch(baseUrl + \"services\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((dishes) => dispatch(addServices(dishes)))\r\n    .catch((error) => dispatch(servicesFailed(error.message)));\r\n};\r\n\r\nexport const servicesLoading = () => ({\r\n  type: ActionTypes.SERVICES_LOADING,\r\n});\r\n\r\nexport const servicesFailed = (errmess) => ({\r\n  type: ActionTypes.SERVICES_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addServices = (dishes) => ({\r\n  type: ActionTypes.ADD_SERVICES,\r\n  payload: dishes,\r\n});\r\n//just add from the instructions from now on\r\nexport const fetchComments = () => (dispatch) => {\r\n  return fetch(baseUrl + \"comments\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((comments) => dispatch(addComments(comments)))\r\n    .catch((error) => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n  type: ActionTypes.COMMENTS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n  type: ActionTypes.ADD_COMMENTS,\r\n  payload: comments,\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n  dispatch(promosLoading());\r\n\r\n  return fetch(baseUrl + \"promotions\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((promos) => dispatch(addPromos(promos)))\r\n    .catch((error) => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () => ({\r\n  type: ActionTypes.PROMOS_LOADING,\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n  type: ActionTypes.PROMOS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n  type: ActionTypes.ADD_PROMOS,\r\n  payload: promos,\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + \"leaders\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((leader) => dispatch(addLeaders(leader)))\r\n    .catch((error) => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING,\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addLeaders = (leader) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leader,\r\n});\r\n",["93","94"],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\components\\ServicedetailComponent.js",["95","96","97","98","99","100"],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\index.js",[],["101","102"],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\redux\\leaders.js",["103"],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\redux\\forms.js",[],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\redux\\comments.js",[],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\components\\AboutComponent.js",[],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\components\\HeaderComponent.js",[],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\components\\HomeComponent.js",[],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\components\\ContactComponent.js",["104","105","106","107","108","109","110","111","112"],"import React, { Component } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Control, Form, Errors, actions } from \"react-redux-form\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) =>\r\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    console.log(\"Current State is: \" + JSON.stringify(values));\r\n    alert(\"Current State is: \" + JSON.stringify(values));\r\n    this.props.resetFeedbackForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Contact Us</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Location Information</h3>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n            <h5>Our Address</h5>\r\n            <address>\r\n              26, UN-ro 157 beon-gil, Nam-gu, Busan, Republic of Korea\r\n              <br />\r\n              <i className=\"fa fa-phone\"></i>: +010 1111 2222\r\n              <br />\r\n              <i className=\"fa fa-fax\"></i>: +010 1234 5678\r\n              <br />\r\n              <i className=\"fa fa-envelope\"></i>:{\" \"}\r\n              <a href=\"mailto:busan@hairsalon.com\">busan@hairsalon.com</a>\r\n            </address>\r\n          </div>\r\n          <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n            <h5>Map of our Location</h5>\r\n          </div>\r\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n            <div className=\"btn-group\" role=\"group\">\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-primary\"\r\n                href=\"tel:+85212345678\"\r\n              >\r\n                <i className=\"fa fa-phone\"></i> Call\r\n              </a>\r\n              <a role=\"button\" className=\"btn btn-info\">\r\n                <i className=\"fa fa-skype\"></i> Skype\r\n              </a>\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-success\"\r\n                href=\"mailto:confusion@food.net\"\r\n              >\r\n                <i className=\"fa fa-envelope-o\"></i> Email\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Send us your Feedback</h3>\r\n          </div>\r\n          <div className=\"col-12 col-md-9\">\r\n            <Form\r\n              model=\"feedback\"\r\n              onSubmit={(values) => this.handleSubmit(values)}\r\n            >\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"firstname\" md={2}>\r\n                  First Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".firstname\"\r\n                    id=\"firstname\"\r\n                    name=\"firstname\"\r\n                    placeholder=\"First Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".firstname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"lastname\" md={2}>\r\n                  Last Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".lastname\"\r\n                    id=\"lastname\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".lastname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"telnum\" md={2}>\r\n                  Contact Tel.\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".telnum\"\r\n                    id=\"telnum\"\r\n                    name=\"telnum\"\r\n                    placeholder=\"Tel. Number\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                      isNumber,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".telnum\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 numbers\",\r\n                      maxLength: \"Must be 15 numbers or less\",\r\n                      isNumber: \"Must be a number\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"email\" md={2}>\r\n                  Email\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      validEmail,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".email\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      validEmail: \"Invalid Email Address\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 6, offset: 2 }}>\r\n                  <div className=\"form-check\">\r\n                    <Label check>\r\n                      <Control.checkbox\r\n                        model=\".agree\"\r\n                        name=\"agree\"\r\n                        className=\"form-check-input\"\r\n                      />{\" \"}\r\n                      <strong>May we contact you?</strong>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n                <Col md={{ size: 3, offset: 1 }}>\r\n                  <Control.select\r\n                    model=\".contactType\"\r\n                    name=\"contactType\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>Tel.</option>\r\n                    <option>Email</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"message\" md={2}>\r\n                  Your Feedback\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model=\".message\"\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    rows=\"12\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 10, offset: 2 }}>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Send Feedback\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\components\\ServiceComponent.js",[],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\components\\FooterComponent.js",[],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\redux\\ActionTypes.js",[],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\shared\\leaders.js",[],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\components\\LoadingComponent.js",[],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\shared\\baseUrl.js",[],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\shared\\dishes.js",[],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\redux\\promotions.js",[],"C:\\Users\\SAMSUNG\\Desktop\\seongjin\\restaurant\\git-test\\src\\redux\\configureStore.js",[],{"ruleId":"113","severity":1,"message":"114","line":50,"column":3,"nodeType":"115","messageId":"116","endLine":52,"endColumn":4},{"ruleId":"117","severity":1,"message":"118","line":87,"column":11,"nodeType":"119","messageId":"120","endLine":87,"endColumn":18},{"ruleId":"117","severity":1,"message":"121","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":16},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"117","severity":1,"message":"126","line":13,"column":3,"nodeType":"119","messageId":"120","endLine":13,"endColumn":7},{"ruleId":"117","severity":1,"message":"127","line":14,"column":3,"nodeType":"119","messageId":"120","endLine":14,"endColumn":12},{"ruleId":"117","severity":1,"message":"128","line":15,"column":3,"nodeType":"119","messageId":"120","endLine":15,"endColumn":8},{"ruleId":"129","severity":1,"message":"130","line":72,"column":19,"nodeType":"131","endLine":77,"endColumn":20},{"ruleId":"129","severity":1,"message":"132","line":91,"column":19,"nodeType":"131","endLine":102,"endColumn":21},{"ruleId":"129","severity":1,"message":"133","line":120,"column":19,"nodeType":"131","endLine":126,"endColumn":21},{"ruleId":"122","replacedBy":"134"},{"ruleId":"124","replacedBy":"135"},{"ruleId":"117","severity":1,"message":"136","line":1,"column":10,"nodeType":"119","messageId":"120","endLine":1,"endColumn":17},{"ruleId":"117","severity":1,"message":"137","line":11,"column":33,"nodeType":"119","messageId":"120","endLine":11,"endColumn":40},{"ruleId":"138","severity":1,"message":"139","line":77,"column":15,"nodeType":"131","endLine":77,"endColumn":57},{"ruleId":"129","severity":1,"message":"132","line":104,"column":19,"nodeType":"131","endLine":115,"endColumn":21},{"ruleId":"129","severity":1,"message":"132","line":133,"column":19,"nodeType":"131","endLine":144,"endColumn":21},{"ruleId":"129","severity":1,"message":"132","line":162,"column":19,"nodeType":"131","endLine":174,"endColumn":21},{"ruleId":"129","severity":1,"message":"132","line":193,"column":19,"nodeType":"131","endLine":203,"endColumn":21},{"ruleId":"129","severity":1,"message":"140","line":219,"column":23,"nodeType":"131","endLine":223,"endColumn":25},{"ruleId":"129","severity":1,"message":"130","line":229,"column":19,"nodeType":"131","endLine":233,"endColumn":20},{"ruleId":"129","severity":1,"message":"133","line":244,"column":19,"nodeType":"131","endLine":250,"endColumn":21},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'AboutUs' is assigned a value but never used.","Identifier","unusedVar","'DISHES' is defined but never used.","no-native-reassign",["141"],"no-negated-in-lhs",["142"],"'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["141"],["142"],"'LEADERS' is defined but never used.","'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]